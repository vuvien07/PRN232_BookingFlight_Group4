@{
    ViewData["Title"] = "Verify Email";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .verify-container {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        .verify-card {
            background: white;
            padding: 2rem;
            border-radius: 15px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 500px;
            text-align: center;
        }
        .success-icon {
            font-size: 4rem;
            color: #28a745;
            margin-bottom: 1rem;
        }
        .error-icon {
            font-size: 4rem;
            color: #dc3545;
            margin-bottom: 1rem;
        }
        .loading-icon {
            font-size: 4rem;
            color: #007bff;
            margin-bottom: 1rem;
        }
        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
        }
        .btn-primary:hover {
            background: linear-gradient(135deg, #5a6fd8 0%, #6a4190 100%);
            transform: translateY(-1px);
        }
        .spinner {
            animation: spin 2s linear infinite;
        }
        @@keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <div class="verify-container">
        <div class="verify-card">
            <div id="loadingState">
                <i class="fas fa-spinner spinner loading-icon"></i>
                <h4>Verifying Your Email...</h4>
                <p class="text-muted">Please wait while we verify your email address.</p>
            </div>

            <div id="successState" style="display: none;">
                <i class="fas fa-check-circle success-icon"></i>
                <h4>Email Verified Successfully!</h4>
                <p class="text-success">Your account is now active and you can login.</p>
                <div class="mt-4">
                    <a href="/Login" class="btn btn-primary">
                        <i class="fas fa-sign-in-alt me-2"></i>Go to Login
                    </a>
                </div>
            </div>

            <div id="errorState" style="display: none;">
                <i class="fas fa-times-circle error-icon"></i>
                <h4>Verification Failed</h4>
                <p class="text-danger" id="errorMessage">Invalid or expired verification token.</p>
                <div class="mt-4">
                    <a href="/Register" class="btn btn-primary me-2">
                        <i class="fas fa-user-plus me-2"></i>Register Again
                    </a>
                    <a href="/Login" class="btn btn-outline-primary">
                        <i class="fas fa-sign-in-alt me-2"></i>Go to Login
                    </a>
                </div>
            </div>

            <!-- Display TempData error message -->
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger mt-3">
                    @TempData["ErrorMessage"]
                </div>
            }
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Get token from URL parameter
        const urlParams = new URLSearchParams(window.location.search);
        const token = '@ViewBag.Token' || urlParams.get('token');
        
        // Verify email on page load
        window.addEventListener('load', async function() {
            if (!token) {
                showError('Invalid verification token.');
                return;
            }

            try {
                // First validate the token
                const validateResponse = await fetch(`http://localhost:5077/api/EmailVerification/validate-token?token=${encodeURIComponent(token)}`);
                const validateData = await validateResponse.json();
                
                if (!validateData.success) {
                    showError(validateData.message || 'Invalid or expired verification token.');
                    return;
                }

                // If token is valid, proceed with verification
                const verifyResponse = await fetch('http://localhost:5077/api/EmailVerification/verify', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        token: token
                    })
                });

                const verifyData = await verifyResponse.json();
                
                if (verifyData.success) {
                    showSuccess(verifyData.message);
                } else {
                    showError(verifyData.message || 'Verification failed.');
                }
            } catch (error) {
                console.error('Verification error:', error);
                showError('Network error. Please check your connection and try again.');
            }
        });

        function showSuccess(message) {
            document.getElementById('loadingState').style.display = 'none';
            document.getElementById('errorState').style.display = 'none';
            document.getElementById('successState').style.display = 'block';
            
            // Update message if provided
            if (message) {
                document.querySelector('#successState p').textContent = message;
            }
        }

        function showError(message) {
            document.getElementById('loadingState').style.display = 'none';
            document.getElementById('successState').style.display = 'none';
            document.getElementById('errorState').style.display = 'block';
            
            // Update error message
            document.getElementById('errorMessage').textContent = message;
        }
    </script>
</body>
</html>
